
	window.onerror = function(err) {
		log('window.onerror: ' + err)
	}
	
	function connectWebViewJavascriptBridge(callback) {
		if (window.WebViewJavascriptBridge) {
			callback(WebViewJavascriptBridge)
		} else {
			document.addEventListener('WebViewJavascriptBridgeReady', function() {
				callback(WebViewJavascriptBridge)
			}, false)
		}
	}
	
	connectWebViewJavascriptBridge(function(bridge) {
		var uniqueId = 1
		function log(message, data) {
			var log = document.getElementById('log')
			var el = document.createElement('div')
			el.className = 'logLine'
			el.innerHTML = uniqueId++ + '. ' + message + ':<br/>' + JSON.stringify(data)
			if (log.children.length) { log.insertBefore(el, log.children[0]) }
			else { log.appendChild(el) }
		}
		bridge.init(function(message, responseCallback) {
			var data = { '先生回答 ==':'嗨，美女，约吗？!' }
			responseCallback(data)
		})

		bridge.registerHandler('美女', function(data, responseCallback) {
			var responseData = { '美女回答':'有空的' }
			alert(responseData)
			responseCallback(responseData)
		})

		var button = document.getElementById('buttons').appendChild(document.createElement('button'))
		button.innerHTML = 'Send message to ObjC'
		button.onclick = function(e) {
			e.preventDefault()
			var data = '先生询问：美女今晚有空吗？'
			log('JS sending message', data)
			bridge.send(data, function(responseData) {
				log('JS got response', responseData)
			})
		}

		document.body.appendChild(document.createElement('br'))

		var callbackButton = document.getElementById('buttons').appendChild(document.createElement('button'))
		callbackButton.innerHTML = 'Fire testObjcCallback'
		callbackButton.onclick = function(e) {
			e.preventDefault()
			log('JS calling handler "testObjcCallback"')
			bridge.callHandler('先生', {'先生': '你喜欢我吗？'}, function(response) {
				alert(response)
			})
		}
	})

alert(12345)
